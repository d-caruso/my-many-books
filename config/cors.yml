# ================================================================
# config/cors.yml - CORS Configuration
# ================================================================

cors:
  # Production CORS configuration
  production:
    origins:
      - https://app.mymanybooks.com
      - https://admin.mymanybooks.com
    methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
    headers:
      - Content-Type
      - Authorization
      - X-Api-Key
      - X-Amz-Date
      - X-Amz-Security-Token
      - X-Requested-With
      - X-User-Agent
    credentials: true
    maxAge: 86400 # 24 hours
    
  # Development CORS configuration  
  development:
    origins:
      - http://localhost:3000
      - http://localhost:3001
      - http://localhost:8080
      - http://127.0.0.1:3000
      - http://127.0.0.1:3001
      - http://127.0.0.1:8080
    methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
      - PATCH
    headers:
      - Content-Type
      - Authorization
      - X-Api-Key
      - X-Amz-Date
      - X-Amz-Security-Token
      - X-Requested-With
      - X-User-Agent
      - Access-Control-Allow-Origin
    credentials: true
    maxAge: 3600 # 1 hour
    
  # Testing CORS configuration
  test:
    origins:
      - "*"
    methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
      - PATCH
    headers:
      - "*"
    credentials: false
    maxAge: 0
    
  # Common preflight handling
  preflight:
    # Cache preflight requests
    maxAge: 86400
    
    # Standard preflight headers
    standardHeaders:
      Access-Control-Allow-Origin: "*"
      Access-Control-Allow-Methods: "GET,POST,PUT,DELETE,OPTIONS"
      Access-Control-Allow-Headers: "Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token"
      Access-Control-Max-Age: "86400"
      
    # Conditional preflight headers (based on origin)
    conditionalHeaders:
      - condition: "origin.includes('localhost') || origin.includes('127.0.0.1')"
        headers:
          Access-Control-Allow-Origin: "${origin}"
          Access-Control-Allow-Credentials: "true"
          
      - condition: "origin.includes('.mymanybooks.com')"
        headers:
          Access-Control-Allow-Origin: "${origin}"
          Access-Control-Allow-Credentials: "true"
          
      - condition: "true" # default fallback
        headers:
          Access-Control-Allow-Origin: "*"
          Access-Control-Allow-Credentials: "false"